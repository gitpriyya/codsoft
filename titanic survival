# titanic survival prediction
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

#load the data
df = pd.read_csv('/content/archive (7).zip')
df.head()

# Drop unnecessary columns
df = df.drop(['Pclass', 'Name', 'Cabin', 'Ticket'], axis=1)
df

# Fill missing values
df['Age'].fillna(df['Age'].dropna().median(), inplace=True)
df['Embarked'] = df['Embarked'].fillna(df['Embarked'].dropna().mode()[0])
df['Fare'].fillna(df['Fare'].dropna().median(), inplace=True)

# Encode categorical variables
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})
df['Embarked'] = df['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})

# Split the data into training and testing sets
X = df.drop('Survived', axis=1)
y = df['Survived']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
logreg = LogisticRegression()
logreg.fit(X_train, y_train)

# Make predictions
y_pred = logreg.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', accuracy)
print(y_pred)
